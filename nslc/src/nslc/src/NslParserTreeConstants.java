package nslc.src;/* Generated By:JJTree: Do not edit this line. nslc.src.NslParserTreeConstants.java */

public interface NslParserTreeConstants
{
    public int JJTNSLIMPORTDECLARATION = 0;
    public int JJTNSLCLASSDECLARATION = 1;
    public int JJTNSLNESTEDCLASSDECLARATION = 2;
    public int JJTNSLFIELDDECLARATION = 3;
    public int JJTNSLLOCALVARIABLEDECLARATION = 4;
    public int JJTNSLVARIABLEDECLARATOR = 5;
    public int JJTNSLARRAYDECLARATOR = 6;
    public int JJTCOMPILATIONUNIT = 7;
    public int JJTPACKAGEDECLARATION = 8;
    public int JJTIMPORTDECLARATION = 9;
    public int JJTTYPEDECLARATION = 10;
    public int JJTCLASSDECLARATION = 11;
    public int JJTUNMODIFIEDCLASSDECLARATION = 12;
    public int JJTCLASSBODY = 13;
    public int JJTNESTEDCLASSDECLARATION = 14;
    public int JJTCLASSBODYDECLARATION = 15;
    public int JJTMETHODDECLARATIONLOOKAHEAD = 16;
    public int JJTINTERFACEDECLARATION = 17;
    public int JJTNESTEDINTERFACEDECLARATION = 18;
    public int JJTUNMODIFIEDINTERFACEDECLARATION = 19;
    public int JJTINTERFACEMEMBERDECLARATION = 20;
    public int JJTFIELDDECLARATION = 21;
    public int JJTVARIABLEDECLARATOR = 22;
    public int JJTVARIABLEDECLARATORID = 23;
    public int JJTVARIABLEINITIALIZER = 24;
    public int JJTARRAYINITIALIZER = 25;
    public int JJTMETHODDECLARATION = 26;
    public int JJTMETHODDECLARATOR = 27;
    public int JJTFORMALPARAMETERS = 28;
    public int JJTFORMALPARAMETER = 29;
    public int JJTCONSTRUCTORDECLARATION = 30;
    public int JJTEXPLICITCONSTRUCTORINVOCATION = 31;
    public int JJTINITIALIZER = 32;
    public int JJTTYPE = 33;
    public int JJTPRIMITIVETYPE = 34;
    public int JJTRESULTTYPE = 35;
    public int JJTNAME = 36;
    public int JJTNAMELIST = 37;
    public int JJTEXPRESSION = 38;
    public int JJTASSIGNMENTOPERATOR = 39;
    public int JJTCONDITIONALEXPRESSION = 40;
    public int JJTCONDITIONALOREXPRESSION = 41;
    public int JJTCONDITIONALANDEXPRESSION = 42;
    public int JJTINCLUSIVEOREXPRESSION = 43;
    public int JJTEXCLUSIVEOREXPRESSION = 44;
    public int JJTANDEXPRESSION = 45;
    public int JJTEQUALITYEXPRESSION = 46;
    public int JJTINSTANCEOFEXPRESSION = 47;
    public int JJTRELATIONALEXPRESSION = 48;
    public int JJTSHIFTEXPRESSION = 49;
    public int JJTADDITIVEEXPRESSION = 50;
    public int JJTMULTIPLICATIVEEXPRESSION = 51;
    public int JJTUNARYEXPRESSION = 52;
    public int JJTPREINCREMENTEXPRESSION = 53;
    public int JJTPREDECREMENTEXPRESSION = 54;
    public int JJTUNARYEXPRESSIONNOTPLUSMINUS = 55;
    public int JJTCASTLOOKAHEAD = 56;
    public int JJTPOSTFIXEXPRESSION = 57;
    public int JJTCASTEXPRESSION = 58;
    public int JJTPRIMARYEXPRESSION = 59;
    public int JJTPRIMARYPREFIX = 60;
    public int JJTPRIMARYSUFFIX = 61;
    public int JJTLITERAL = 62;
    public int JJTBOOLEANLITERAL = 63;
    public int JJTNULLLITERAL = 64;
    public int JJTARGUMENTS = 65;
    public int JJTARGUMENTLIST = 66;
    public int JJTALLOCATIONEXPRESSION = 67;
    public int JJTARRAYDIMSANDINITS = 68;
    public int JJTSTATEMENT = 69;
    public int JJTLABELEDSTATEMENT = 70;
    public int JJTBLOCK = 71;
    public int JJTBLOCKSTATEMENT = 72;
    public int JJTLOCALVARIABLEDECLARATION = 73;
    public int JJTEMPTYSTATEMENT = 74;
    public int JJTSTATEMENTEXPRESSION = 75;
    public int JJTSWITCHSTATEMENT = 76;
    public int JJTSWITCHLABEL = 77;
    public int JJTIFSTATEMENT = 78;
    public int JJTWHILESTATEMENT = 79;
    public int JJTDOSTATEMENT = 80;
    public int JJTFORSTATEMENT = 81;
    public int JJTFORINIT = 82;
    public int JJTSTATEMENTEXPRESSIONLIST = 83;
    public int JJTFORUPDATE = 84;
    public int JJTBREAKSTATEMENT = 85;
    public int JJTCONTINUESTATEMENT = 86;
    public int JJTRETURNSTATEMENT = 87;
    public int JJTTHROWSTATEMENT = 88;
    public int JJTSYNCHRONIZEDSTATEMENT = 89;
    public int JJTTRYSTATEMENT = 90;
    public int JJTASSERTSTATEMENT = 91;
    public int JJTERROR_SKIPTO = 92;


    public String[] jjtNodeName = {
            "NslImportDeclaration",
            "NslClassDeclaration",
            "NslNestedClassDeclaration",
            "NslFieldDeclaration",
            "NslLocalVariableDeclaration",
            "NslVariableDeclarator",
            "NslArrayDeclarator",
            "CompilationUnit",
            "PackageDeclaration",
            "ImportDeclaration",
            "TypeDeclaration",
            "ClassDeclaration",
            "UnmodifiedClassDeclaration",
            "ClassBody",
            "NestedClassDeclaration",
            "ClassBodyDeclaration",
            "MethodDeclarationLookahead",
            "InterfaceDeclaration",
            "NestedInterfaceDeclaration",
            "UnmodifiedInterfaceDeclaration",
            "InterfaceMemberDeclaration",
            "FieldDeclaration",
            "VariableDeclarator",
            "VariableDeclaratorId",
            "VariableInitializer",
            "ArrayInitializer",
            "MethodDeclaration",
            "MethodDeclarator",
            "FormalParameters",
            "FormalParameter",
            "ConstructorDeclaration",
            "ExplicitConstructorInvocation",
            "Initializer",
            "Type",
            "PrimitiveType",
            "ResultType",
            "Name",
            "NameList",
            "Expression",
            "AssignmentOperator",
            "ConditionalExpression",
            "ConditionalOrExpression",
            "ConditionalAndExpression",
            "InclusiveOrExpression",
            "ExclusiveOrExpression",
            "AndExpression",
            "EqualityExpression",
            "InstanceOfExpression",
            "RelationalExpression",
            "ShiftExpression",
            "AdditiveExpression",
            "MultiplicativeExpression",
            "UnaryExpression",
            "PreIncrementExpression",
            "PreDecrementExpression",
            "UnaryExpressionNotPlusMinus",
            "CastLookahead",
            "PostfixExpression",
            "CastExpression",
            "PrimaryExpression",
            "PrimaryPrefix",
            "PrimarySuffix",
            "Literal",
            "BooleanLiteral",
            "NullLiteral",
            "Arguments",
            "ArgumentList",
            "AllocationExpression",
            "ArrayDimsAndInits",
            "Statement",
            "LabeledStatement",
            "Block",
            "BlockStatement",
            "LocalVariableDeclaration",
            "EmptyStatement",
            "StatementExpression",
            "SwitchStatement",
            "SwitchLabel",
            "IfStatement",
            "WhileStatement",
            "DoStatement",
            "ForStatement",
            "ForInit",
            "StatementExpressionList",
            "ForUpdate",
            "BreakStatement",
            "ContinueStatement",
            "ReturnStatement",
            "ThrowStatement",
            "SynchronizedStatement",
            "TryStatement",
            "AssertStatement",
            "error_skipto",
    };
}
